version: 2

jobs:
  "build-rails":
    working_directory: ~/rusperiode/ruslingdk
    docker:
      - image: circleci/ruby:2.5.1-node
        environment:
          PG_HOST: localhost
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: ruslingdk_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout:
          path: ~/rusperiode
      # Restore bundle cache
      - restore_cache:
          key: ruslingdk-bundler-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: ruslingdk-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Run rspec in parallel
      - run: |
          bundle exec rails test

  "build-studego":
    working_directory: ~/rusperiode/studego
    docker:
      - image: circleci/ruby:2.5.1
    steps:
      - checkout:
          path: ~/rusperiode
      - run: bundle install --path vendor/bundle
      - run: ruby builder.rb > output/output.html
      - store_artifacts:
          path: output/

  "build-tjanser":
    docker:
      - image: circleci/openjdk:8u162-jdk
    working_directory: ~/rusperiode/Tjanseauktion

    steps:
      - checkout:
          path: ~/rusperiode
      - restore_cache:
          key: tjanser-java-spring-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: tjanser-java-spring-{{ checksum "pom.xml" }}

      - run: mvn package

      - store_test_results:
          path: target/surefire-reports

      - store_artifacts:
          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-rails
      - build-studego
      - build-tjanser